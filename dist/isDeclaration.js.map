{"version":3,"sources":["isDeclaration.js"],"names":["isDeclaration","node","parent","type","id","name","undefined","expressions","find","x","params","object","start","indexOf","property","local","exported"],"mappings":";;;;;;AACA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,MAAP,EAAkB;;AAEtC,MACGD,KAAKE,IAAL,KAAc,YAAf,KACGD,OAAOC,IAAP,KAAgB,oBAAhB,IAAwCD,OAAOE,EAAP,CAAUC,IAAV,KAAmBJ,KAAKI,IAAjE,IACCH,OAAOC,IAAP,KAAgB,oBAAhB,IACCG,cAAcJ,OAAOK,WAAP,CAAmBC,IAAnB,CAAwB;AAAA,WAAKC,EAAEJ,IAAF,KAAWJ,KAAKI,IAArB;AAAA,GAAxB,CAFhB,IAGCH,OAAOC,IAAP,KAAgB,qBAAhB,IAAyCD,OAAOE,EAAP,CAAUC,IAAV,KAAmBJ,KAAKI,IAHlE,IAICH,OAAOC,IAAP,KAAgB,qBAAhB,IACCG,cAAcJ,OAAOQ,MAAP,CAAcF,IAAd,CAAmB;AAAA,WAAKC,EAAEJ,IAAF,KAAWJ,KAAKI,IAArB;AAAA,GAAnB,CALhB,IAMCH,OAAOC,IAAP,KAAgB,kBAAhB,IACCD,OAAOS,MAAP,CAAcN,IAAd,KAAuBJ,KAAKI,IAD7B,IAECH,OAAOS,MAAP,CAAcC,KAAd,KAAwBX,KAAKW,KAF9B,IAGC,CAAC,CAAD,KAAO,CAAC,OAAD,EAAU,MAAV,EAAkBC,OAAlB,CAA0BX,OAAOY,QAAP,CAAgBT,IAA1C,CATT,IAUCH,OAAOC,IAAP,KAAgB,iBAAhB,IAAqCD,OAAOa,KAAP,CAAaV,IAAb,KAAsBJ,KAAKI,IAVjE,IAWCH,OAAOC,IAAP,KAAgB,wBAAhB,IAA4CD,OAAOa,KAAP,CAAaV,IAAb,KAAsBJ,KAAKI,IAXxE,IAYA,CAACH,OAAOC,IAAP,KAAgB,0BAAhB,IAA8CD,OAAOa,KAAP,CAAaV,IAAb,KAAsBJ,KAAKI,IAA1E,KACCH,OAAOC,IAAP,KAAgB,iBAAhB,IAAqCD,OAAOc,QAAP,CAAgBX,IAAhB,KAAyBJ,KAAKI,IADpE,CAZA,IAcCH,OAAOC,IAAP,KAAgB,iBAAhB,IAAqCD,OAAOa,KAAP,CAAaV,IAAb,KAAsBJ,KAAKI,IAfnE,CADF,EAkBE;AACA,WAAO,IAAP;AACD,GApBD,MAoBO;AACL,WAAO,KAAP;AACD;AACF,CAzBD;;kBA2BeL,a","file":"isDeclaration.js","sourcesContent":["\nconst isDeclaration = (node, parent) => {\n\n  if (\n    (node.type === 'Identifier') && (\n      (parent.type === 'VariableDeclarator' && parent.id.name === node.name) ||\n      (parent.type === 'SequenceExpression' && \n        undefined !== parent.expressions.find(x => x.name === node.name)) ||\n      (parent.type === 'FunctionDeclaration' && parent.id.name === node.name) ||\n      (parent.type === 'FunctionDeclaration' &&\n        undefined !== parent.params.find(x => x.name === node.name)) ||\n      (parent.type === 'MemberExpression' &&\n        parent.object.name === node.name &&\n        parent.object.start === node.start &&\n        -1 === ['apply', 'call'].indexOf(parent.property.name)) ||\n      (parent.type === 'ImportSpecifier' && parent.local.name === node.name) ||\n      (parent.type === 'ImportDefaultSpecifier' && parent.local.name === node.name) ||\n      (parent.type === 'ImportNamespaceSpecifier' && parent.local.name === node.name) |\n      (parent.type === 'ExportSpecifier' && parent.exported.name === node.name) ||\n      (parent.type === 'ExportSpecifier' && parent.local.name === node.name)\n    )\n  ) {\n    return true\n  } else {\n    return false\n  }\n}\n\nexport default isDeclaration\n"]}